trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    # Install Gradle on the build agent
    sudo apt-get update
    sudo apt-get install -y gradle
  displayName: 'Install Gradle'
  continueOnError: true # Continue even if installation fails

- script: |
    # Check if the gradlew script exists
    if [ ! -f "gradlew" ]; then
        echo "gradlew script not found. Generating it..."
        ./gradle wrapper
    fi
  displayName: 'Check and Generate gradlew Script'
  workingDirectory: $(System.DefaultWorkingDirectory)

- script: |
    # Ensure Gradle Wrapper is executable
    chmod +x gradlew
    # Build the project using the Gradle Wrapper
    ./gradlew build
  displayName: 'Build with Gradle'
  workingDirectory: $(System.DefaultWorkingDirectory)

- task: PublishTestResults@2
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/TEST-*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/build/test-results'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(System.DefaultWorkingDirectory)/build/libs'
    artifactName: 'drop'
